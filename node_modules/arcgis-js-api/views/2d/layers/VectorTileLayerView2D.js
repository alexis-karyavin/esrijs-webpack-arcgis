// COPYRIGHT Â© 2020 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.16/esri/copyright.txt for details.

define(["require","exports","tslib","../../../Graphic","../../../core/Error","../../../core/Handles","../../../core/Logger","../../../core/promiseUtils","../../../core/accessorSupport/decorators","../../../geometry/support/aaBoundingRect","../engine/vectorTiles/TileHandler","../engine/vectorTiles/TileManager","../engine/vectorTiles/VectorTile","../engine/vectorTiles/VectorTileContainer","./LayerView2D","../tiling/TileInfoViewPOT","../tiling/TileQueue","../../layers/LayerView"],(function(e,t,i,r,n,a,l,o,s,u,c,h,d,p,_,y,f,v){var w=l.getLogger("esri.views.2d.layers.VectorTileLayerView2D");return function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t._handles=new a,t._fetchQueue=null,t._parseQueue=null,t._isTileHandlerPromiseFulfilled=!1,t._invalidateStyle=!1,t}return i.__extends(t,e),t.prototype.initialize=function(){var e=this,t=this.layer.tileInfo,i=t&&t.spatialReference,r=this.view.constraints.rotationEnabled;i.equals(this.view.spatialReference)?(this._tileInfoView=new y(this.layer.tileInfo,this.layer.fullExtent),this._vectorTileView=new p.VectorTileContainer(this._tileInfoView),this._tileHandler=new c.TileHandler(this.layer,window.devicePixelRatio||1,!0,this._vectorTileView,null,r),this.container.visible=this.layer.visible,this.container.addChild(this._vectorTileView),this.handles.add([this._vectorTileView.on("updating-change",(function(){return e.notifyChange("updating")})),this.watch("layer.currentStyleInfo",(function(){return e._start()})),this.watch("layer.visible",(function(){return e.container.visible=e.layer.visible}))])):this.addResolvingPromise(o.reject(new n("layerview:spatial-reference-incompatible","The spatial reference of this layer does not meet the requirements of the view",{layer:this.layer})))},t.prototype.destroy=function(){this._stop(),this.container.removeAllChildren(),this._vectorTileView.destroy(),this._tileHandler&&(this._tileHandler.destroy(),this._tileHandler=null)},t.prototype.hitTest=function(e,t){return i.__awaiter(this,void 0,void 0,(function(){var n,a,l,o,s;return i.__generator(this,(function(i){switch(i.label){case 0:return this.suspended||!this._tileHandlerPromise?[2,null]:[4,this._tileHandlerPromise];case 1:return i.sent(),[4,this._vectorTileView.hitTest(e,t)];case 2:return(n=i.sent())&&0!==n.length?(a=n[0]-1,l=this._tileHandler.getStyleRepository().layers,a>=l.length?[2,null]:(o=l[a],(s=new r({attributes:{layerId:a,layerName:o.id}})).layer=this.layer,s.sourceLayer=this.layer,[2,s])):[2,null]}}))}))},t.prototype.update=function(e){var t=this,i=this._tileHandlerPromise;i&&i.then((function(){if(e.pixelRatio!==t._tileHandler.devicePixelRatio)return t._start(),void(t._tileHandler.devicePixelRatio=e.pixelRatio);t._invalidateStyle?(t._issueStyleInvalidation(),t._invalidateStyle=!1):(t._fetchQueue.pause(),t._parseQueue.pause(),t._fetchQueue.state=e.state,t._parseQueue.state=e.state,t._tileManager.update(e),t._parseQueue.resume(),t._fetchQueue.resume());for(var i=0,r=t._vectorTileView.children;i<r.length;i++){var n=r[i];t._tileHandler.updateTile(n,e)}}))},t.prototype.attach=function(){var e=this;this._start(),this._handles.add(this.layer.on("paint-change",(function(){return e._vectorTileView.requestRender()}))),this._handles.add(this.layer.on("layout-change",(function(){e._invalidateStyle=!0,e.requestUpdate()})))},t.prototype.detach=function(){this._stop(),this._handles.removeAll()},t.prototype.moveStart=function(){this.requestUpdate()},t.prototype.viewChange=function(){this.requestUpdate()},t.prototype.moveEnd=function(){this.requestUpdate()},t.prototype.canResume=function(){var t=e.prototype.canResume.call(this),i=this.layer;if(t&&i.currentStyleInfo){var r=this.view.scale,n=i.currentStyleInfo;if(n&&n.layerDefinition){var a=n.layerDefinition;a.minScale&&a.minScale<r&&(t=!1),a.maxScale&&a.maxScale>r&&(t=!1)}}return t},t.prototype.isUpdating=function(){var e,t,i,r;return!this._isTileHandlerPromiseFulfilled||null!==(t=null===(e=this._fetchQueue)||void 0===e?void 0:e.updating)&&void 0!==t&&t||null!==(r=null===(i=this._parseQueue)||void 0===i?void 0:i.updating)&&void 0!==r&&r||this._vectorTileView.updating},t.prototype.acquireTile=function(e){var t=this,i=this._createVectorTile(e);return this._tileHandlerPromise.then((function(){t._fetchQueue.push(i.key).then((function(e){return t._parseQueue.push(e)})).then((function(e){i.once("attach",(function(){return t.requestUpdate()})),t._vectorTileView.setTileData(i,e),t._vectorTileView.addChild(i)})).catch((function(e){o.isAbortError(e)||w.error(e),i.destroy()}))})),i},t.prototype.releaseTile=function(e){var t=e.key.id;this._fetchQueue.abort(t),this._parseQueue.abort(t),this._tileHandler.abortTileUpdate(t),this.requestUpdate()},t.prototype._start=function(){var e=this;if(this._stop(),this._tileManager=new h.TileManager({acquireTile:function(t){return e.acquireTile(t)},releaseTile:function(t){return e.releaseTile(t)},tileInfoView:this._tileInfoView,fadeDuration:300},this._vectorTileView),this.layer.currentStyleInfo){var t=new AbortController,i=this._tileHandler.start({signal:t.signal}).then((function(){e._fetchQueue=new f({tileInfoView:e._tileInfoView,process:function(t,i){return e._getTileData(t,i)},concurrency:15}),e._parseQueue=new f({tileInfoView:e._tileInfoView,process:function(t,i){return e._parseTileData(t,i)},concurrency:8}),e.requestUpdate(),e._isTileHandlerPromiseFulfilled=!0}));this._tileHandler.spriteMosaic.then((function(t){e._vectorTileView.setStyleResources(t,e._tileHandler.glyphMosaic,e.layer.styleRepository),e.requestUpdate()})),this._tileHandlerAbortController=t,this._tileHandlerPromise=i}},t.prototype._stop=function(){if(this._tileHandlerAbortController){var e=this._tileHandlerAbortController;e&&e.abort(),this._tileHandlerPromise=null,this._isTileHandlerPromiseFulfilled=!1,this._fetchQueue&&(this._fetchQueue.destroy(),this._fetchQueue=null),this._parseQueue&&(this._parseQueue.destroy(),this._parseQueue=null),this._tileManager&&(this._tileManager.destroy(),this._tileManager=null),this._vectorTileView.removeAllChildren()}},t.prototype._getTileData=function(e,t){return i.__awaiter(this,void 0,void 0,(function(){var r;return i.__generator(this,(function(i){switch(i.label){case 0:return[4,this._tileHandler.fetchTileData(e,t)];case 1:return r=i.sent(),[2,{key:e,data:r}]}}))}))},t.prototype._parseTileData=function(e,t){return i.__awaiter(this,void 0,void 0,(function(){return i.__generator(this,(function(i){return[2,this._tileHandler.parseTileData(e,this.updateParameters.state.rotation,t)]}))}))},t.prototype._issueStyleInvalidation=function(){var e=this;this._tileHandlerPromise=this._tileHandler.updateStyle().then((function(){e._tileHandler.spriteMosaic.then((function(t){return e._vectorTileView.setStyleResources(t,e._tileHandler.glyphMosaic,e.layer.styleRepository)})),e._fetchQueue.pause(),e._parseQueue.pause(),e._fetchQueue.clear(),e._parseQueue.clear(),e._parseQueue.resume(),e._fetchQueue.resume(),e.requestUpdate()}))},t.prototype._createVectorTile=function(e){var t=this.view.constraints.rotationEnabled,i=this._tileInfoView.getTileBounds(u.create(),e);return new d.VectorTile(e,this.layer.styleRepository,i,[512,512],this.view.rotation,t)},i.__decorate([s.property()],t.prototype,"_fetchQueue",void 0),i.__decorate([s.property()],t.prototype,"_parseQueue",void 0),i.__decorate([s.property()],t.prototype,"_isTileHandlerPromiseFulfilled",void 0),i.__decorate([s.property({dependsOn:["view.scale","layer.currentStyleInfo"]})],t.prototype,"suspended",void 0),i.__decorate([s.property({dependsOn:["_isTileHandlerPromiseFulfilled","_parseQueue.updating","_parseQueue.updating"]})],t.prototype,"updating",void 0),t=i.__decorate([s.subclass("esri.views.2d.layers.VectorTileLayerView2D")],t)}(_.LayerView2DMixin(v))}));