// COPYRIGHT Â© 2020 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.16/esri/copyright.txt for details.

define(["require","exports","./MemoryRequirements","./TileBufferData","./TileDisplayData","./Utils","./Utils","./WGLDisplayObject","./WGLDisplayRecord","./mesh/VertexBuffer","./util/Reader","./util/serializationUtils","./util/Writer"],(function(e,t,r,a,i,s,f,l,n,u,o,d,D){Object.defineProperty(t,"__esModule",{value:!0});var p=new r.default,v=new r.default;function h(e,t){var r={};for(var a in e){var i={data:f.allocateTypedArrayBuffer(t,e[a]),stride:e[a]};r[a]=i}return r}var y=function(){function e(){this.tileDisplayData=null,this.tileBufferData=null}return e.prototype.reshuffle=function(){p.reset();for(var t=i.groupRecordsByGeometryType(this.tileDisplayData.displayObjects),r=0,l=t;r<l.length;r++)for(var n=0,u=M=l[r];n<u.length;n++){(T=u[n])&&p.needMore(T.geometryType,T.meshData?T.meshData.vertexCount:T.vertexCount,T.meshData?T.meshData.indexData.length:T.indexCount)}for(var o=t.length,d=new a,D=0;D<o;++D){d.geometries[D].indexBuffer=new Uint32Array(Math.round(1.15*p.indicesFor(D)));var h=[];for(var y in this.tileBufferData.geometries[D].vertexBuffer)h.push(this.tileBufferData.geometries[D].vertexBuffer[y].stride);var B=e._computeVertexAlignment(h),c=Math.round(1.15*p.verticesFor(D)),g=e._align(c,B);for(var m in this.tileBufferData.geometries[D].vertexBuffer){var x=this.tileBufferData.geometries[D].vertexBuffer[m].stride;d.geometries[D].vertexBuffer[m]={stride:x,data:f.allocateTypedArrayBuffer(g,x)}}}v.reset(),this.tileDisplayData.displayList.clear();for(D=0;D<o;++D){for(var M,w=0,b=M=t[D];w<b.length;w++){var T;if((T=b[w]).meshData)T.writeMeshDataToBuffers(v.verticesFor(D),d.geometries[D].vertexBuffer,v.indicesFor(D),d.geometries[D].indexBuffer),T.meshData=null;else{var L=this.tileBufferData.geometries[D].vertexBuffer,j=this.tileBufferData.geometries[D].indexBuffer,O=d.geometries[D].vertexBuffer,A=d.geometries[D].indexBuffer,F=v.verticesFor(D),_=v.indicesFor(D);s.copyMeshData(F,_,O,A,T,L,j),T.vertexFrom=F,T.indexFrom=_}v.needMore(D,T.vertexCount,T.indexCount)}this.tileDisplayData.displayList.unified||this.tileDisplayData.displayList.addToList(M)}if(this.tileDisplayData.displayList.unified)for(var z=0,R=this.tileDisplayData.displayObjects;z<R.length;z++){var C=R[z];this.tileDisplayData.displayList.addToList(C.displayRecords)}this.tileBufferData=d},e.prototype.getStrides=function(){for(var e=[],t=0;t<this.tileBufferData.geometries.length;++t){var r=this.tileBufferData.geometries[t];for(var a in e[t]={},r.vertexBuffer)e[t][a]=r.vertexBuffer[a].stride}return e},e.prototype.clone=function(){var t=new e;return t.tileBufferData=this.tileBufferData.clone(),t.tileDisplayData=this.tileDisplayData.clone(),t},e.prototype._guessSize=function(){for(var e=this.tileDisplayData.displayObjects,t=Math.min(e.length,4),r=0,a=0;a<t;a++)r=Math.max(r,e[a].displayRecords.length);return 2*(12*e.length+e.length*r*40)},e.prototype.serialize=function(){var e=this.tileBufferData.serialize(),t=this.tileBufferData.getBuffers(),r=this.tileDisplayData.serialize(new D.default(Int32Array,this._guessSize())).buffer();return t.push(r),{result:{displayData:r,bufferData:e},transferList:t}},e.decode=function(t){var r=d.deserializeList(new o.default(t.displayObjects),l),a={};for(var i in t.vertexBuffersMap)a[i]=u.VertexBuffers.decode(t.vertexBuffersMap[i]);return e.fromMeshData({displayObjects:r,vertexBuffersMap:a})},e.fromMeshData=function(t){var r=new e,s=new i.default,f=new a;for(var l in s.displayObjects=t.displayObjects,t.vertexBuffersMap){var n=t.vertexBuffersMap[l];f.geometries[l].indexBuffer=n.indexBuffer,f.geometries[l].vertexBuffer=n.namedBuffers}return r.tileDisplayData=s,r.tileBufferData=f,r},e.bind=function(t,r){var a=new e;return a.tileDisplayData=t,a.tileBufferData=r,a},e.create=function(t,r){var s=new e;s.tileDisplayData=new i.default,s.tileDisplayData.displayObjects=t;for(var f=[0,0,0,0,0],l=[0,0,0,0,0],u=[[],[],[],[],[]],o=0,d=t;o<d.length;o++)for(var D=0,p=d[o].displayRecords;D<p.length;D++){var v=p[D];u[v.geometryType].push(v),f[v.geometryType]+=v.meshData.vertexCount,l[v.geometryType]+=v.meshData.indexData.length}for(var y=new a,B=function(e){return[e.fill||{},e.line||{},e.icon||{},e.text||{},e.label||{}]}(r),c=0;c<5;c++){var g=new Uint32Array(l[c]),m=h(B[c],f[c]);n.writeAllMeshDataToBuffers(u[c],m,g),y.geometries[c]={indexBuffer:g,vertexBuffer:m}}return s.tileBufferData=y,s},e._align=function(e,t){var r=e%t;return 0===r?e:e+(t-r)},e._computeVertexAlignment=function(e){for(var t=!1,r=!1,a=0,i=e;a<i.length;a++){var s=i[a];s%4==2?t=!0:s%4!=0&&(r=!0)}return r?4:t?2:1},e}();t.TileData=y}));