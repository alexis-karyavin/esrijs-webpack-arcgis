// COPYRIGHT Â© 2020 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.16/esri/copyright.txt for details.

define(["require","exports","tslib","../../../../../core/Evented","../../../../../core/maybe","./EditGeometry","./EditGeometry"],(function(e,t,i,r,s,n,o){Object.defineProperty(t,"__esModule",{value:!0}),t.EditGeometry=o.EditGeometry,t.Vertex=o.Vertex,t.Edge=o.Edge,t.Component=o.Component;var d=function(e){function t(t,i){var r=e.call(this)||this;return r.data=t,r.type=i,r._dirty=!0,r._geometry=null,r}return i.__extends(t,e),t.prototype.splitEdge=function(e,t){var i=new h(this,e,t);return this.data.apply(i),this._dirty=!0,i},t.prototype.moveVertices=function(e,t,i,r){var s=null;return this.data.lastOperation instanceof a&&this.data.lastOperation.canAccumulate(e)?(s=this.data.lastOperation).accumulate(t,i,r):(s=new a(this,e,t,i,r),this.data.apply(s)),this._dirty=!0,s},t.prototype.removeVertices=function(e){var t=0;switch(this.type){case"point":t=1;break;case"polyline":t=2;break;case"polygon":t=3}var i=new p(this,e,t);return this.data.apply(i),this._dirty=!0,i},t.prototype.appendVertex=function(e){if(0===this.data.components.length)return null;var t=new c(this,this.data.components[0],e);return this.data.apply(t),this._dirty=!0,t},t.prototype.canRemoveVertex=function(){var e=0;switch(this.type){case"point":e=1;break;case"polyline":e=2;break;case"polygon":e=3}return this.data.components[0].vertices.length>e},t.prototype.undo=function(){this.data.undo(),this._dirty=!0},Object.defineProperty(t.prototype,"canUndo",{get:function(){return this.data.canUndo},enumerable:!0,configurable:!0}),t.prototype.redo=function(){this.data.redo(),this._dirty=!0},Object.defineProperty(t.prototype,"canRedo",{get:function(){return this.data.canRedo},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"geometry",{get:function(){if(this._dirty){switch(this.type){case"point":this._geometry=this.data.toPoint();break;case"polyline":this._geometry=this.data.toPolyline();break;case"polygon":this._geometry=this.data.toPolygon()}this._dirty=!1}return this._geometry},enumerable:!0,configurable:!0}),t}(r);t.EditGeometryHelper=d;var h=function(){function e(e,t,i){this.helper=e,this.edge=t,this.t=i,this.createdVertex=null,this.left=null,this.right=null}return e.prototype.apply=function(){var e="redo",t=this.edge,i=t.component,r=t.component.data,o=t.left,d=t.right;i.edges.splice(i.edges.indexOf(t),1),s.isNone(this.createdVertex)&&(e="apply",this.createdVertex=new n.Vertex(t.component)),i.vertices.push(this.createdVertex),this.createdVertex.pos=r.coordinateHelper.lerp(t.left.pos,t.right.pos,this.t,r.coordinateHelper.createNew()),s.isNone(this.left)&&(this.left=new n.Edge(i,o,this.createdVertex)),i.edges.push(this.left),o.right=this.left,s.isNone(this.right)&&(this.right=new n.Edge(i,this.createdVertex,d)),i.edges.push(this.right),d.left=this.right,i.updateVertexIndex(this.createdVertex,o.index+1);var h={type:"vertex-add",vertices:[this.createdVertex],operation:e};this.helper.emit("vertex-add",h)},e.prototype.undo=function(){if(s.isNone(this.createdVertex)||s.isNone(this.left)||s.isNone(this.right))return null;var e=this.edge,t=e.component,i=this.createdVertex.left,r=this.createdVertex.right,n=i.left,o=r.right;t.vertices.splice(t.vertices.indexOf(this.createdVertex),1),t.edges.splice(t.edges.indexOf(this.left),1),t.edges.splice(t.edges.indexOf(this.right),1),t.edges.push(this.edge),n.right=e,o.left=e,t.updateVertexIndex(n,n.index);var d={type:"vertex-remove",vertices:[this.createdVertex],operation:"undo"};this.helper.emit("vertex-remove",d)},e}();t.SplitEdgeOperation=h;var a=function(){function e(e,t,i,r,s){this.helper=e,this.applied=!1,this.vertices=t,this.dx=i,this.dy=r,this.dz=s}return e.prototype.apply=function(){var e=this;this.vertices.forEach((function(t){e.helper.data.coordinateHelper.addDelta(t.pos,e.dx,e.dy,e.dz)})),this.helper.data.components.forEach((function(e){e.unnormalizeVertexPositions()}));var t={type:"vertex-update",vertices:this.vertices,operation:this.applied?"redo":"apply"};this.helper.emit("vertex-update",t),this.applied=!0},e.prototype.undo=function(){var e=this;this.vertices.forEach((function(t){e.helper.data.coordinateHelper.addDelta(t.pos,-e.dx,-e.dy,-e.dz)}));var t={type:"vertex-update",vertices:this.vertices,operation:"undo"};this.helper.emit("vertex-update",t)},e.prototype.canAccumulate=function(e){if(e.length!==this.vertices.length)return!1;for(var t=0;t<e.length;++t)if(e[t]!==this.vertices[t])return!1;return!0},e.prototype.accumulate=function(e,t,i){var r=this;this.vertices.forEach((function(s){r.helper.data.coordinateHelper.addDelta(s.pos,e,t,i)})),this.dx+=e,this.dy+=t,this.dz+=i;var s={type:"vertex-update",vertices:this.vertices,operation:"apply"};this.helper.emit("vertex-update",s)},e}();t.UpdateVerticesOperation=a;var p=function(){function e(e,t,i){void 0===i&&(i=0),this.helper=e,this.removedVertices=null,this._minNumberOfVertices=0,this.vertices=t,this._minNumberOfVertices=i}return e.prototype.apply=function(){var e=this,t="redo";null==this.removedVertices?(this.removedVertices=[],this.vertices.forEach((function(t){var i=e._removeVertex(t);s.isSome(i)&&e.removedVertices.push(i)})),t="apply"):this.removedVertices.forEach((function(t){e._redoRemoveVertex(t)}));var i={type:"vertex-remove",vertices:this.vertices,operation:t};this.helper.emit("vertex-remove",i)},e.prototype.undo=function(){var e=this;this.removedVertices.forEach((function(t){e._undoRemoveVertex(t)}));var t={type:"vertex-add",vertices:this.vertices,operation:"undo"};this.helper.emit("vertex-add",t)},e.prototype._removeVertex=function(e){var t=e.component;if(t.vertices.length<=this._minNumberOfVertices)return null;var i={removedVertex:e,createdEdge:null},r=e.left,s=e.right;return t.vertices.splice(t.vertices.indexOf(e),1),r&&(t.edges.splice(t.edges.indexOf(r),1),r.left.right=null),s&&(t.edges.splice(t.edges.indexOf(s),1),s.right.left=null),0===e.index&&s&&this.vertices.length>0&&t.swapVertices(t.vertices.indexOf(s.right),0),r&&s&&(i.createdEdge=new n.Edge(t,r.left,s.right),t.edges.push(i.createdEdge)),s&&t.updateVertexIndex(s.right,s.right.index-1),i},e.prototype._redoRemoveVertex=function(e){console.warn("redo remove vertex not implemented yet")},e.prototype._undoRemoveVertex=function(e){var t=e.removedVertex,i=e.removedVertex.component,r=t.left,s=t.right;e.createdEdge&&i.edges.splice(i.edges.indexOf(e.createdEdge),1),i.vertices.push(t),r&&(i.edges.push(r),r.left.right=r),s&&(i.edges.push(s),s.right.left=s),i.updateVertexIndex(t,t.index)},e}();t.RemoveVerticesOperation=p;var c=function(){function e(e,t,i){this.helper=e,this.component=t,this.pos=i,this.addedVertex=null,this.originalEdge=null,this.left=null,this.right=null}return e.prototype.apply=function(){var e="redo";if(s.isNone(this.addedVertex)&&(e="apply",this.addedVertex=new n.Vertex(this.component)),0===this.component.vertices.length)this.component.vertices.push(this.addedVertex),this.addedVertex.pos=this.pos,this.addedVertex.index=0;else{var t=s.unwrap(this.component.findEndVertex()),i=null;t.right&&(this.originalEdge=t.right,i=this.originalEdge.right,this.component.edges.splice(this.component.edges.indexOf(this.originalEdge),1)),this.component.vertices.push(this.addedVertex),this.addedVertex.pos=this.pos,s.isNone(this.left)&&(this.left=new n.Edge(this.component,t,this.addedVertex)),this.component.edges.push(this.left),t.right=this.left,s.isSome(this.originalEdge)&&s.isSome(i)&&(s.isNone(this.right)&&(this.right=new n.Edge(this.component,this.addedVertex,i)),this.component.edges.push(this.right),i.left=this.right),this.component.updateVertexIndex(this.addedVertex,t.index+1)}var r={type:"vertex-add",vertices:[this.addedVertex],operation:e};this.helper.emit("vertex-add",r)},e.prototype.undo=function(){if(s.isNone(this.addedVertex))return null;this.component.vertices.splice(this.component.vertices.indexOf(this.addedVertex),1),s.isSome(this.left)&&(this.component.edges.splice(this.component.edges.indexOf(this.left),1),this.left.left.right=null),s.isSome(this.right)&&(this.component.edges.splice(this.component.edges.indexOf(this.right),1),this.right.right.left=null),s.isSome(this.originalEdge)&&(this.component.edges.push(this.originalEdge),this.originalEdge.left.right=this.originalEdge,this.originalEdge.right.left=this.originalEdge),s.isSome(this.left)?this.component.updateVertexIndex(this.left.left,this.left.left.index):this.component.updateVertexIndex(this.addedVertex,0);var e={type:"vertex-remove",vertices:[this.addedVertex],operation:"undo"};this.helper.emit("vertex-remove",e)},e}();t.AppendVertexOperation=c}));