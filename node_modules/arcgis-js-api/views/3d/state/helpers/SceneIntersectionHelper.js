// COPYRIGHT Â© 2020 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.16/esri/copyright.txt for details.

define(["require","exports","../../../../core/maybe","../../../../core/PooledArray","../../../../core/screenUtils","../../../../core/libs/gl-matrix-2/vec3","../../../../core/libs/gl-matrix-2/vec3f64","../../support/geometryUtils","../../support/stack","../../webgl-engine/lib/Intersector","../../webgl-engine/lib/intersectorUtils"],(function(e,t,r,i,n,a,s,o,c,l,d){Object.defineProperty(t,"__esModule",{value:!0});var u,v=function(){function e(e,t,r){this.viewingMode=e,this.layerProvider=t,this.view=r,this.externalIntersectionHandlers=new i,this.tolerance=l.Intersector.DEFAULT_TOLERANCE,this.tmpRay=o.ray.create(),this.validateHUDIntersector=new l.Intersector(this.viewingMode),this.validateHUDIntersector.options.hud=!1}return e.prototype.intersectScreen=function(e,t){return this.intersectRay(this.getPickRay(e,this.tmpRay),p(this.viewingMode),t)},e.prototype.intersectScreenFreePointFallback=function(e,t){return this.intersectRayFreePointFallback(this.getPickRay(e,this.tmpRay),t)},e.prototype.intersectRayFreePointFallback=function(e,t){return this.intersectRay(e,p(this.viewingMode),t)||this.intersectRayFreePointLocal(e,t)},e.prototype.intersectRay=function(e,t,r,i){return t.options.selectionMode=!1,t.options.store=0,this.computeIntersection(e,t,i),!!t.results.min&&t.results.min.getIntersectionPoint(r)},e.prototype.getCenterRayWithSubpixelOffset=function(e,t,r,i){return void 0===r&&(r=.5),void 0===i&&(i=.5),e.getRenderCenter(m,r,i),m[0]+=.0466,m[1]-=.0123,o.ray.fromRenderAtEye(e,m,t)},e.prototype.intersectIntersectorScreen=function(e,t,r){this.computeIntersection(this.getPickRay(e,this.tmpRay),t,r)},e.prototype.intersectToolIntersectorScreen=function(e,t,r){var i=this.getPickRay(e,this.tmpRay);this.intersectToolIntersectorRay(i,t,r)},e.prototype.intersectToolIntersectorRay=function(e,t,r){t.options.selectionMode=!0,this.computeIntersection(e,t,r);var i=t.results.min;!!this.view.basemapTerrain&&this.view.basemapTerrain.isOpaque()||i.hasIntersectionPoint&&"TerrainRenderer"!==i.intersector||(t.options.selectionMode=!1,this.computeIntersection(e,t,r))},e.prototype.setTolerance=function(e){void 0===e&&(e=l.Intersector.DEFAULT_TOLERANCE),this.tolerance=e},e.prototype.addIntersectionHandler=function(e){this.externalIntersectionHandlers.push(e),this.externalIntersectionHandlers.sort((function(e,t){return"Terrain"===e.type?1:"Terrain"===t.type?-1:0}))},e.prototype.removeIntersectionHandler=function(e){this.externalIntersectionHandlers.removeUnordered(e),this.externalIntersectionHandlers.sort((function(e,t){return"Terrain"===e.type?1:"Terrain"===t.type?-1:0}))},e.prototype.getPickRay=function(e,t){void 0===t&&(t=o.ray.create());var r=this.view.state.camera;return o.ray.fromScreen(r,e,t)},e.prototype.intersectRayFreePointLocal=function(e,t){if("local"!==this.viewingMode)return!1;var r=this.view.dataExtent,i={x:r.xmax-r.xmin,y:r.ymax-r.ymin,z:8*Math.max(r.xmax-r.xmin,r.ymax-r.ymin)},n=Math.max(i.x,i.y,i.z);if(0===n)return a.vec3.add(t,e.origin,a.vec3.normalize(c.sv3d.get(),e.direction)),!0;var s=this.view.state.camera,o=Math.max(0,r.xmin-s.eye[0],s.eye[0]-r.xmax),l=Math.max(0,r.ymin-s.eye[1],s.eye[1]-r.ymax),d=Math.sqrt(o*o+l*l),u=Math.abs(s.relativeElevation)+Number.MIN_VALUE,v=Math.pow(Math.max(0,Math.log(n/u)),2),h=n/Math.max(1,v);h=Math.max(h,Math.min(d,n));var p=a.vec3.scale(c.sv3d.get(),e.direction,h/a.vec3.length(e.direction));return a.vec3.add(t,e.origin,p),!0},e.prototype.intersectElevationFromScreen=function(e,t,r){return void 0===r&&(r=0),this.intersectElevation(this.getPickRay(e,this.tmpRay),t,r)},e.prototype.intersectElevation=function(e,t,i){void 0===i&&(i=0);var s=r.isSome(t)?t.mode:"absolute-height",o=r.isSome(t)?r.unwrapOr(t.offset,0):0,u="on-the-ground"!==s?o+i:0,v=u/this.view.renderCoordsHelper.unitInMeters;if("absolute-height"===s){if(this.view.renderCoordsHelper.intersectManifold(e,u,f)){var h=this.view.computeMapPointFromVec3d(f);return h.z-=o,h}return null}var p=this.view.state.camera,m=n.castRenderScreenPointArray3(c.sv3d.get());p.projectPoint(e.origin,m);var g=this.prepareFilters(null,y),I=this.view.slicePlane,R=r.isSome(I)?d.sliceFilterPredicate(I):null,P=new l.Intersector(this.viewingMode);P.options.store=0,P.options.verticalOffset=v;var x=e.origin,w=a.vec3.add(c.sv3d.get(),x,e.direction);switch(P.reset(x,w),P.point=m,P.camera=p,P.filterPredicate=null,s){case"relative-to-scene":P.intersect(g.layers,m,p,this.tolerance,null,(function(e){return e.metadata&&e.metadata.isElevationSource})),this.externalIntersectionHandlers.forEach((function(e){if("I3S"===e.type||"Terrain"===e.type){var t=e.slicePlane?R:null;e.intersect(P,t,P.rayBeginPoint,P.rayEndPoint,m)}}));break;case"on-the-ground":case"relative-to-ground":this.externalIntersectionHandlers.forEach((function(e){if(e.isGround){var t=e.slicePlane?R:null;e.intersect(P,t,P.rayBeginPoint,P.rayEndPoint,m)}}))}if(P.results.min.getIntersectionPoint(f)){var b=this.view.computeMapPointFromVec3d(f);return b.z=i,b}return null},e.prototype.computeIntersection=function(e,t,i){var s=this,o=this.view.state.camera,l=n.castRenderScreenPointArray3(c.sv3d.get());o.projectPoint(e.origin,l);var u=this.prepareFilters(i,y);t.options.storeTerrainResults=u.filterLayerUid(d.TERRAIN_ID),t.options.selectOpaqueTerrainOnly=!i||!("include"in i||"exclude"in i);var v=e.origin,h=a.vec3.add(c.sv3d.get(),e.origin,e.direction);t.reset(v,h),t.intersect(u.layers,l,o,this.tolerance);var p=this.view.slicePlane,f=r.isSome(p)?d.sliceFilterPredicate(p):null;t.intersect(u.sliceableLayers,l,o,this.tolerance,f);var m=i&&(i.terrainLocationFeedbackEnabled||i.enableDraped);this.externalIntersectionHandlers.forEach((function(e){if(e.intersectionHandlerId===d.TERRAIN_ID){if(!m&&!u.filterLayerUid(d.TERRAIN_ID))return}else if(!u.filterLayerUid(e.intersectionHandlerId))return;var r=e.slicePlane?f:null;e.intersect(t,r,v,h,l)}));var g=c.sv3d.get();if(i&&i.enableDraped&&t.results.ground.getIntersectionPoint(g)){var I=this.view.basemapTerrain.overlayManager.renderer,R=this.view.renderCoordsHelper.spatialReference,P=c.sv3d.get();this.view.renderCoordsHelper.fromRenderCoords(g,P,this.view.spatialReference),P[2]=this.view.elevationProvider.getElevation(g[0],g[1],g[2],R)||0,I.intersect(t,P,u.filterRenderGeometry)}t.sortResults();var x=t.results.hud;if(x.hasIntersectionPoint){var w=n.castRenderScreenPointArray3(c.sv3d.get()),b=c.sv3d.get(),M=c.sv3d.get();this.unprojectHUDResultRay(x.center,w,b,M);var H=a.vec3.distance(x.center,b)/a.vec3.distance(b,M)*.99;this.validateHUDIntersector.reset(b,M),this.validateHUDIntersector.intersect(u.layers,w,o,this.tolerance),this.validateHUDIntersector.intersect(u.sliceableLayers,w,o,this.tolerance,f),this.externalIntersectionHandlers.forEach((function(e){if(u.filterLayerUid(e.intersectionHandlerId)){var t=e.slicePlane?f:null;e.intersect(s.validateHUDIntersector,t,b,M,w)}}));var E=this.validateHUDIntersector.results.min;(null==E.dist||H<=E.dist)&&(t.results.min.copyFrom(x),t.results.all.splice(0,0,x))}},e.prototype.prepareFilters=function(e,t){var r=[],i=[];return this.layerProvider.forEachLayer((function(e){e.isPickable&&(e.isSliceable?i:r).push(e)})),t.include=e&&e.include,t.exclude=e&&e.exclude,t.layers.length=0,t.sliceableLayers.length=0,h(r,t.filterLayer,t.layers),h(i,t.filterLayer,t.sliceableLayers),t},e.prototype.unprojectHUDResultRay=function(e,t,r,i){var a=this.view.state.camera;a.projectPoint(e,t);var s=n.castRenderScreenPointArray3(c.sv3d.get());s[0]=t[0],s[1]=t[1],s[2]=0,a.unprojectPoint(s,r),s[2]=1,a.unprojectPoint(s,i)},e}();function h(e,t,r){for(var i=0,n=e;i<n.length;i++){var a=n[i];t&&!t(a)||r.push(a)}return r}function p(e){return u||(u=new l.Intersector(e)),u.viewingMode=e,u}t.SceneIntersectionHelper=v;var y={include:null,exclude:null,layers:[],sliceableLayers:[],filterLayer:function(e){return y.filterLayerUid(e.apiLayerUid)},filterLayerUid:function(e){var t=y.include,i=y.exclude;return r.isNone(e)?null==t&&null==i:(null==t||t.has(e))&&(null==i||!i.has(e))},filterRenderGeometry:function(e){return y.filterLayerUid(e.data.layerUid)}},f=s.vec3f64.create(),m=n.createRenderScreenPointArray()}));