// COPYRIGHT Â© 2020 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.16/esri/copyright.txt for details.

define(["require","exports","tslib","../../../../core/mathUtils","../../../../core/maybe","../../../../core/screenUtils","../../../../core/libs/gl-matrix-2/mat3","../../../../core/libs/gl-matrix-2/mat3f64","../../../../core/libs/gl-matrix-2/mat4","../../../../core/libs/gl-matrix-2/mat4f64","../../../../core/libs/gl-matrix-2/vec2","../../../../core/libs/gl-matrix-2/vec2f64","../../../../core/libs/gl-matrix-2/vec3","../../../../core/libs/gl-matrix-2/vec3f64","../../../../core/libs/gl-matrix-2/types/mat4","../../../../geometry/support/aaBoundingRect","../../support/buffer/InterleavedLayout","../lib/geometryDataUtils","../lib/GLMaterialTexture","../lib/Material","../lib/screenSizePerspectiveUtils","../lib/Util","./internal/bufferWriterUtils","./internal/MaterialUtil","./renderers/MergedRenderer","./renderers/utils","../shaders/HUDMaterial.glsl","../shaders/HUDMaterialTechnique"],(function(e,t,r,i,n,a,s,o,c,l,f,u,p,h,d,v,m,g,x,A,y,S,O,P,C,V,b,q){Object.defineProperty(t,"__esModule",{value:!0});var z=function(e){function t(t,r){var i=e.call(this,r)||this;return i.techniqueConfig=new q.HUDMaterialTechniqueConfiguration,i.params=P.copyParameters(t,K),i}return r.__extends(t,e),t.prototype.setParameterValues=function(e){for(var t in e)"textureId"===t&&S.assert(!!this.params.textureId,"Can only change texture of material that already has a texture"),this.params[t]=e[t];this.parametersChanged()},t.prototype.getParameters=function(){return this.params},t.prototype.getTechniqueConfig=function(e){return this.techniqueConfig.output=e,this.techniqueConfig.slicePlaneEnabled=this.params.slicePlaneEnabled,this.techniqueConfig.verticalOffset=!!this.params.verticalOffset,this.techniqueConfig.screenSizePerspective=!!this.params.screenSizePerspective,this.techniqueConfig.screenCenterOffsetUnitsEnabled="screen"===this.params.centerOffsetUnits?1:0,this.techniqueConfig.polygonOffsetEnabled=this.params.polygonOffset,this.techniqueConfig.occlusionTestEnabled=this.params.occlusionTest,this.techniqueConfig.sdf=this.params.textureIsSignedDistanceField,this.techniqueConfig.vvSize=!!this.params.vvSizeEnabled,this.techniqueConfig.vvColor=!!this.params.vvColorEnabled,0===e&&(this.techniqueConfig.debugDrawBorder=!!this.params.debugDrawBorder),4===e&&(this.techniqueConfig.binaryHighlightOcclusion=this.params.binaryHighlightOcclusion),this.techniqueConfig.depthEnabled=this.params.depthEnabled,this.techniqueConfig},t.prototype.intersect=function(e,t,r,i,n,a,s,o,c){c?this.intersectDrapedHudGeometry(e,a,s,o):this.intersectHudGeometry(e,t,r,i,s,o)},t.prototype.intersectDrapedHudGeometry=function(e,t,r,i){var n=e.getAttribute(S.VertexAttrConstants.POSITION),a=e.getAttribute(S.VertexAttrConstants.SIZE),s=this.params,o=b.calculateAnchorPosForRendering(s),c=1,l=1;if(i){var f=i(Z);c=f[0],l=f[5]}c*=e.pixelRatio,l*=e.pixelRatio;for(var u=W*e.pixelRatio,p=0;p<n.data.length/n.size;p++){var h=p*n.size,d=n.data[h],v=n.data[h+1],m=p*a.size;k[0]=a.data[m]*c,k[1]=a.data[m+1]*l;var g=void 0;s.textureIsSignedDistanceField&&(g=s.outlineSize*e.pixelRatio/2),w(t,d,v,k,u,g,s,o)&&r()}},t.prototype.intersectHudGeometry=function(e,t,r,i,n,a){if(i.options.selectionMode&&i.options.hud&&!V.isInstanceHidden(t)){var o,l,f,u,d,v,m,g,x,A,O,P,C,q=e.data,z=this.params,I=1,M=1;if(s.mat3.fromMat4(H,r),a){var T=a(Z);I=T[0],M=T[5],l=(o=H)[0],f=o[1],u=o[2],d=o[3],v=o[4],m=o[5],g=o[6],x=o[7],A=o[8],O=1/Math.sqrt(l*l+f*f+u*u),P=1/Math.sqrt(d*d+v*v+m*m),C=1/Math.sqrt(g*g+x*x+A*A),o[0]=l*O,o[1]=f*O,o[2]=u*O,o[3]=d*P,o[4]=v*P,o[5]=m*P,o[6]=g*C,o[7]=x*C,o[8]=A*C}var R=q.getVertexAttr()[S.VertexAttrConstants.POSITION],N=q.getVertexAttr()[S.VertexAttrConstants.SIZE],F=q.getVertexAttr()[S.VertexAttrConstants.NORMAL],W=q.getVertexAttr()[S.VertexAttrConstants.AUXPOS1];S.assert(R.size>=3);var J=i.point,K=i.camera,Q=b.calculateAnchorPosForRendering(z);I*=K.pixelRatio,M*=K.pixelRatio;for(var Y="screen"===this.params.centerOffsetUnits,$=0;$<R.data.length/R.size;$++){var ee=$*R.size;p.vec3.set(D,R.data[ee],R.data[ee+1],R.data[ee+2]),p.vec3.transformMat4(D,D,r);var te=$*N.size;k[0]=N.data[te]*I,k[1]=N.data[te+1]*M,p.vec3.transformMat4(D,D,K.viewMatrix);var re=$*W.size;if(p.vec3.set(G,W.data[re+0],W.data[re+1],W.data[re+2]),!Y&&(D[0]+=G[0],D[1]+=G[1],0!==G[2])){var ie=G[2];p.vec3.normalize(G,D),p.vec3.subtract(D,D,p.vec3.scale(G,G,ie))}var ne=$*F.size;if(p.vec3.set(_,F.data[ne],F.data[ne+1],F.data[ne+2]),this.normalAndViewAngle(_,H,K,X),this.applyVerticalOffsetTransformationView(D,X,K,U),K.applyProjection(D,E),E[0]>-1){var ae=Math.floor(E[0])+this.params.screenOffset[0],se=Math.floor(E[1])+this.params.screenOffset[1];Y&&(ae+=G[0],0!==G[1]&&(se+=y.applyScaleFactor(G[1],U.factorAlignment))),y.applyPrecomputedScaleFactor(k,U.factor,k);var oe=j*K.pixelRatio,ce=void 0;if(z.textureIsSignedDistanceField&&(ce=z.outlineSize*K.pixelRatio/2),w(J,ae,se,k,oe,ce,z,Q)){var le=i.ray;p.vec3.transformMat4(B,D,c.mat4.invert(L,K.viewMatrix)),E[0]=J[0],E[1]=J[1],K.unprojectPoint(E,D);var fe=h.vec3f64.create();p.vec3.copy(fe,le.direction);var ue=1/p.vec3.length(fe);p.vec3.scale(fe,fe,ue),n(p.vec3.distance(le.origin,D)*ue,fe,-1,1,!0,B)}}}}},t.prototype.computeAttachmentOrigin=function(e,t){var r=e.data,i="getVertexAttr"in r?r.getVertexAttr():"vertexAttr"in r?r.vertexAttr:null;if(!i)return null;var n=S.VertexAttrConstants.POSITION,a=i[n],s="getIndices"in r?r.getIndices(n):"indices"in r?r.indices[n]:null;return g.computeAttachmentOriginPoints(a,s,t)},t.prototype.createBufferWriter=function(){return new Y(this)},t.prototype.createRenderer=function(e,t){return new C(e,t,this)},t.prototype.normalAndViewAngle=function(e,t,r,i){return d.isMat4(t)&&(t=s.mat3.fromMat4(F,t)),p.vec3.transformMat3(i.normal,e,t),p.vec3.transformMat4(i.normal,i.normal,r.viewInverseTransposeMatrix),i.cosAngle=p.vec3.dot(N,J),i},t.prototype.updateScaleInfo=function(e,t,r){var i=this.params;i.screenSizePerspective?y.precomputeScaleFactor(r,t,i.screenSizePerspective,e.factor):(e.factor.scale=1,e.factor.factor=0,e.factor.minPixelSize=0,e.factor.paddingPixels=0),i.screenSizePerspectiveAlignment?y.precomputeScaleFactor(r,t,i.screenSizePerspectiveAlignment,e.factorAlignment):(e.factorAlignment.factor=e.factor.factor,e.factorAlignment.scale=e.factor.scale,e.factorAlignment.minPixelSize=e.factor.minPixelSize,e.factorAlignment.paddingPixels=e.factor.paddingPixels)},t.prototype.applyShaderOffsetsView=function(e,t,r,i,n,a,s){var o=this.normalAndViewAngle(t,r,n,X);return this.applyVerticalGroundOffsetView(e,o,n,s),this.applyVerticalOffsetTransformationView(s,o,n,a),this.applyPolygonOffsetView(s,o,i[3],n,s),this.applyCenterOffsetView(s,i,s),s},t.prototype.applyShaderOffsetsNDC=function(e,t,r,i,a){return this.applyCenterOffsetNDC(e,t,r,i),n.isSome(a)&&p.vec3.copy(a,i),this.applyPolygonOffsetNDC(i,t,r,i),i},t.prototype.applyPolygonOffsetView=function(e,t,r,n,a){var s=n.aboveGround?1:-1,o=i.sign(r);0===o&&(o=s);var c=s*o;if(this.params.shaderPolygonOffset<=0)return p.vec3.copy(a,e);var l=i.clamp(Math.abs(t.cosAngle),.01,1),f=1-Math.sqrt(1-l*l)/l/n.viewport[2];return c>0?p.vec3.scale(a,e,f):p.vec3.scale(a,e,1/f),a},t.prototype.applyVerticalGroundOffsetView=function(e,t,r,i){var n=p.vec3.length(e),a=r.aboveGround?1:-1,s=.5*r.computeRenderPixelSizeAtDist(n),o=p.vec3.scale(D,t.normal,a*s);return p.vec3.add(i,e,o),i},t.prototype.applyVerticalOffsetTransformationView=function(e,t,r,i){var n=this.params;if(!n.verticalOffset||!n.verticalOffset.screenLength){if(n.screenSizePerspective||n.screenSizePerspectiveAlignment){var a=p.vec3.length(e);this.updateScaleInfo(i,a,t.cosAngle)}else i.factor.scale=1,i.factorAlignment.scale=1;return e}var s=p.vec3.length(e),o=n.screenSizePerspectiveAlignment||n.screenSizePerspective,c=P.verticalOffsetAtDistance(r,s,n.verticalOffset,t.cosAngle,o);return this.updateScaleInfo(i,s,t.cosAngle),p.vec3.scale(t.normal,t.normal,c),p.vec3.add(e,e,t.normal)},t.prototype.applyCenterOffsetView=function(e,t,r){var i="screen"!==this.params.centerOffsetUnits;return r!==e&&p.vec3.copy(r,e),i&&(r[0]+=t[0],r[1]+=t[1],t[2]&&(p.vec3.normalize(_,r),p.vec3.add(r,r,p.vec3.scale(_,_,t[2])))),r},t.prototype.applyCenterOffsetNDC=function(e,t,r,i){var n="screen"!==this.params.centerOffsetUnits;return i!==e&&p.vec3.copy(i,e),n||(i[0]+=t[0]/r.fullWidth*2,i[1]+=t[1]/r.fullHeight*2),i},t.prototype.applyPolygonOffsetNDC=function(e,t,r,n){var a=this.params.shaderPolygonOffset;if(e!==n&&p.vec3.copy(n,e),a){var s=r.aboveGround?1:-1,o=s*i.sign(t[3]);n[2]-=(o||s)*a}return n},t.prototype.getGLMaterial=function(e){return 0===e.output?new M(e):4===e.output?new T(e):void 0},t.prototype.calculateRelativeScreenBounds=function(e,t,r){return void 0===r&&(r=v.create()),function(e,t,r,i){void 0===i&&(i=R);f.vec2.copy(i,e.anchorPos),i[0]*=-t[0],i[1]*=-t[1],i[0]+=e.screenOffset[0]*r,i[1]+=e.screenOffset[1]*r}(this.params,e,t,r),r[2]=r[0]+e[0],r[3]=r[1]+e[1],r},t.shouldRenderVisibilityDuringRenderPass=function(e){return 0===e||4},t}(A.Material);t.default=z;var I=function(e){function t(t){var i=e.call(this,r.__assign(r.__assign({},t),t.material.getParameters()))||this;return i.updateParameters(),i}return r.__extends(t,e),t.prototype.beginSlot=function(e){return e===(this.params.drawInSecondSlot?19:18)},t.prototype.updateParameters=function(){this.params=P.copyParameters(this.material.getParameters()),this.updateTexture(this.params.textureId),this.selectProgram()},t.prototype.selectProgram=function(){this.technique=this.techniqueRep.acquireAndReleaseExisting(q.HUDMaterialTechnique,this.material.getTechniqueConfig(this.output),this.technique)},t.prototype.bind=function(e,t){e.bindProgram(this.technique.program),this.bindTexture(e,this.technique.program),this.bindTextureScale(e,this.technique.program),this.technique.bindPass(e,this.params,t)},t}(x),M=function(e){function t(t){var i=e.call(this,r.__assign(r.__assign({},t),{output:0}))||this;return i.isOcclusionSlot=!1,i}return r.__extends(t,e),t.prototype.beginSlot=function(e){var t=this.params.drawInSecondSlot?19:18;return this.params.occlusionTest?(this.isOcclusionSlot=12===e,12===e||e===t):(this.isOcclusionSlot=!1,e===t)},t.prototype.getTechnique=function(){return this.isOcclusionSlot?this.occlusionTechnique:this.technique},t.prototype.selectProgram=function(){this.technique=this.techniqueRep.acquireAndReleaseExisting(q.HUDMaterialTechnique,this.material.getTechniqueConfig(this.output),this.technique),this.occlusionTechnique=this.techniqueRep.acquireAndReleaseExisting(q.HUDMaterialTechnique,this.material.getTechniqueConfig(6),this.occlusionTechnique)},t.prototype.bind=function(e,t){var r=this.getTechnique();e.bindProgram(r.program),this.isOcclusionSlot||(this.bindTexture(e,r.program),this.bindTextureScale(e,r.program)),r.bindPass(e,this.params,t)},t}(I),T=function(e){function t(t){return e.call(this,r.__assign(r.__assign({},t),{output:4}))||this}return r.__extends(t,e),t}(I);function w(e,t,r,i,n,a,s,o){var c=t-n-(o[0]>0?i[0]*o[0]:0),l=c+i[0]+2*n,f=r-n-(o[1]>0?i[1]*o[1]:0),u=f+i[1]+2*n;if(s.textureIsSignedDistanceField){var p=s.distanceFieldBoundingBox;c+=i[0]*p[0],f+=i[1]*p[1],l-=i[0]*(1-p[2]),u-=i[1]*(1-p[3]),c-=a,l+=a,f-=a,u+=a}return e[0]>c&&e[0]<l&&e[1]>f&&e[1]<u}var U={factor:{scale:0,factor:0,minPixelSize:0,paddingPixels:0},factorAlignment:{scale:0,factor:0,minPixelSize:0,paddingPixels:0}},R=u.vec2f64.create(),D=h.vec3f64.create(),_=h.vec3f64.create(),E=a.createRenderScreenPointArray3(),N=h.vec3f64.create(),B=h.vec3f64.create(),H=o.mat3f64.create(),F=o.mat3f64.create(),L=l.mat4f64.create(),G=h.vec3f64.create(),X={normal:N,cosAngle:0},Z=l.mat4f64.create(),j=1,W=2,k=[0,0],J=h.vec3f64.fromValues(0,0,1),K={texCoordScale:[1,1],occlusionTest:!0,binaryHighlightOcclusion:!0,drawInSecondSlot:!1,color:[1,1,1,1],outlineColor:[1,1,1,1],outlineSize:0,textureIsSignedDistanceField:!1,distanceFieldBoundingBox:null,vvSizeEnabled:!1,vvSizeMinSize:[1,1,1],vvSizeMaxSize:[100,100,100],vvSizeOffset:[0,0,0],vvSizeFactor:[1,1,1],vvColorEnabled:!1,vvColorValues:[0,0,0,0,0,0,0,0],vvColorColors:[1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0],screenOffset:[0,0],verticalOffset:null,screenSizePerspective:null,screenSizePerspectiveAlignment:null,slicePlaneEnabled:!1,anchorPos:u.vec2f64.fromValues(.5,.5),shaderPolygonOffset:1e-5,polygonOffset:!1,textureId:null,centerOffsetUnits:"world",depthEnabled:!0,debugDrawBorder:!1},Q=m.newLayout().vec3f(S.VertexAttrConstants.POSITION).vec3f(S.VertexAttrConstants.NORMAL).vec2f(S.VertexAttrConstants.UV0).vec4u8(S.VertexAttrConstants.COLOR).vec2f(S.VertexAttrConstants.SIZE).vec4f(S.VertexAttrConstants.AUXPOS1).vec4f(S.VertexAttrConstants.AUXPOS2),Y=function(){function e(e){this.material=e,this.vertexBufferLayout=Q}return e.prototype.allocate=function(e){return this.vertexBufferLayout.createBuffer(e)},e.prototype.elementCount=function(e){return 6*e.indices[S.VertexAttrConstants.POSITION].length},e.prototype.write=function(e,t,r,i){O.writePosition(t.indices[S.VertexAttrConstants.POSITION],t.vertexAttr[S.VertexAttrConstants.POSITION].data,e.transformation,r.position,i,6),O.writeNormal(t.indices[S.VertexAttrConstants.NORMAL],t.vertexAttr[S.VertexAttrConstants.NORMAL].data,e.invTranspTransformation,r.normal,i,6);var n=t.vertexAttr[S.VertexAttrConstants.UV0].data,a=void 0,s=void 0,o=void 0,c=void 0;if(null==n||n.length<4){var l=this.material.getParameters();a=0,s=0,o=l.texCoordScale[0],c=l.texCoordScale[1]}else a=n[0],s=n[1],o=n[2],c=n[3];o=Math.min(1.99999,o+1),c=Math.min(1.99999,c+1);for(var f=t.indices[S.VertexAttrConstants.POSITION].length,u=r.uv0,p=i,h=0;h<f;++h)u.set(p,0,a),u.set(p,1,s),p+=1,u.set(p,0,o),u.set(p,1,s),p+=1,u.set(p,0,o),u.set(p,1,c),p+=1,u.set(p,0,o),u.set(p,1,c),p+=1,u.set(p,0,a),u.set(p,1,c),p+=1,u.set(p,0,a),u.set(p,1,s),p+=1;O.writeColor(t.indices[S.VertexAttrConstants.COLOR],t.vertexAttr[S.VertexAttrConstants.COLOR].data,4,r.color,i,6);var d=t.indices[S.VertexAttrConstants.SIZE],v=t.vertexAttr[S.VertexAttrConstants.SIZE].data,m=d.length,g=r.size;for(p=i,h=0;h<m;++h)for(var x=v[2*d[h]],A=v[2*d[h]+1],y=0;y<6;++y)g.set(p,0,x),g.set(p,1,A),p+=1;t.indices[S.VertexAttrConstants.AUXPOS1]&&t.vertexAttr[S.VertexAttrConstants.AUXPOS1]&&O.writeBufferVec4(t.indices[S.VertexAttrConstants.AUXPOS1],t.vertexAttr[S.VertexAttrConstants.AUXPOS1].data,r.auxpos1,i,6),t.indices[S.VertexAttrConstants.AUXPOS2]&&t.vertexAttr[S.VertexAttrConstants.AUXPOS2]&&O.writeBufferVec4(t.indices[S.VertexAttrConstants.AUXPOS2],t.vertexAttr[S.VertexAttrConstants.AUXPOS2].data,r.auxpos2,i,6)},e}()}));