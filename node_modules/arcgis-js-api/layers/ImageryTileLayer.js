// COPYRIGHT Â© 2020 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.16/esri/copyright.txt for details.

define(["require","exports","tslib","../geometry","../PopupTemplate","../rasterRenderers","../request","../core/Error","../core/jsonMap","../core/Logger","../core/maybe","../core/MultiOriginJSONSupport","../core/promiseUtils","../core/accessorSupport/decorators","../core/accessorSupport/ensureType","../geometry/support/spatialReferenceUtils","./Layer","./mixins/OperationalLayer","./mixins/PortalLayer","./mixins/RefreshableLayer","./mixins/ScaleRangeLayer","./support/commonProperties","./support/DimensionalDefinition","./support/Field","./support/imageryRendererUtils","./support/RasterJobHandler","./support/TileInfo","./support/rasterDatasets/RasterFactory","../renderers/support/RasterSymbolizer","../support/popupUtils"],(function(e,r,t,i,n,o,a,s,l,p,d,u,c,y,h,f,_,m,b,g,v,I,R,S,J,x,P,T,w,O){var H=l.strict()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"});function D(){return{enabled:!this.loaded||"RasterTileServer"===this.raster.datasetFormat&&"Raster"===this.raster.tileType}}var L=p.getLogger("esri.layers.ImageryTileLayer");return function(e){function r(){for(var r=[],t=0;t<arguments.length;t++)r[t]=arguments[t];var i=e.apply(this,r)||this;return i._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},i.bandIds=null,i.copyright=null,i.fullExtent=null,i.interpolation="nearest",i.legendEnabled=!0,i.isReference=null,i.listMode="show",i.raster=null,i.rasterInfo=null,i.sourceJSON=null,i.spatialReference=null,i.tileInfo=null,i.version=null,i.title=null,i.type="imagery-tile",i.url=null,i.operationalLayerType="ArcGISTiledImageServiceLayer",i.popupEnabled=!0,i.popupTemplate=null,i.symbolizer=null,i}return t.__extends(r,e),r.prototype.normalizeCtorArgs=function(e,r){return"string"==typeof e?t.__assign({url:e},r):e},r.prototype.load=function(e){var r=this,t=d.isSome(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).then((function(){return r._openRaster(t)}),(function(){return r._openRaster(t)}))),c.resolve(this)},Object.defineProperty(r.prototype,"multidimensionalDefinition",{set:function(e){this.raster&&(this._sliceId=this.raster.getSliceIndex(e)),this._set("multidimensionalDefinition",e)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"defaultPopupTemplate",{get:function(){return this.createPopupTemplate()},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"fields",{get:function(){var e,r,t=[new S({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})],i=null===(r=null===(e=this.rasterInfo)||void 0===e?void 0:e.attributeTable)||void 0===r?void 0:r.fields;if(i){var n=i.filter((function(e){return"oid"!==e.type&&"value"!==e.name.toLowerCase()})).map((function(e){var r=e.clone();return r.name="Raster."+e.name,r}));t=t.concat(n)}return t},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"renderer",{set:function(e){this._set("renderer",e),this.updateRenderer()},enumerable:!0,configurable:!0}),r.prototype.readRenderer=function(e,r,t){var i=r&&r.layerDefinition&&r.layerDefinition.drawingInfo&&r.layerDefinition.drawingInfo.renderer,n=o.read(i,t)||void 0;if(null!=n)return n},r.prototype.createPopupTemplate=function(e){return O.createPopupTemplate(this,e)},r.prototype.updateRenderer=function(){return t.__awaiter(this,void 0,void 0,(function(){var e;return t.__generator(this,(function(r){switch(r.label){case 0:return this.loaded?JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer)?[2]:(e=this._rasterJobHandler.instance)?(this.symbolizer.renderer=this.renderer,this.symbolizer.bind(),[4,e.updateSymbolizer(this.symbolizer)]):[2]:[2];case 1:return r.sent(),this._cachedRendererJson=this.renderer.toJSON(),[2]}}))}))},r.prototype.applyRenderer=function(e,r){return t.__awaiter(this,void 0,void 0,(function(){var i,n,o,a;return t.__generator(this,(function(s){switch(s.label){case 0:return(i=e&&e.pixelBlock)&&i.pixels&&i.pixels.length>0?(this.updateRenderer(),o=this._rasterJobHandler.instance,a=this.bandIds,o?[4,o.symbolize(t.__assign(t.__assign({},e),{simpleStretchParams:r,bandIds:a}))]:[3,2]):[2,null];case 1:return n=s.sent(),[3,3];case 2:n=this.symbolizer.symbolize(t.__assign(t.__assign({},e),{simpleStretchParams:r,bandIds:a})),s.label=3;case 3:return[2,n]}}))}))},r.prototype.getTileUrl=function(e,r,t){return"RasterTileServer"===this.raster.datasetFormat?this.url+"/tile/"+e+"/"+r+"/"+t:""},r.prototype.getCompatibleTileInfo=function(e,r){if(!this.loaded)return null;var t=f.getInfo(e);return P.create({size:256,spatialReference:e,origin:t?{x:t.origin[0],y:t.origin[1]}:{x:r.xmin,y:r.ymax}})},r.prototype.getCompatibleFullExtent=function(e){return this.loaded?this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)?this._compatibleFullExtent:(this._compatibleFullExtent=this.raster.computeExtent(e),this._compatibleFullExtent):null},r.prototype.fetchTile=function(e,r,i,n){return void 0===n&&(n={}),t.__awaiter(this,void 0,void 0,(function(){var o,s;return t.__generator(this,(function(l){switch(l.label){case 0:return n.requestAsImageElement?(o=this.getTileUrl(e,r,i),[2,a(o,{responseType:"image",query:{sliceId:this._sliceId,_ts:n.timestamp},signal:n.signal}).then((function(e){return e.data}))]):[4,this._initJobHandler()];case 1:return l.sent(),this.multidimensionalDefinition&&(s=this._sliceId,n=t.__assign({multidimensionalDefinition:this.multidimensionalDefinition,sliceId:s},n)),[2,this.raster.fetchTile(e,r,i,n)]}}))}))},r.prototype.fetchPixels=function(e,r,i,n){return t.__awaiter(this,void 0,void 0,(function(){var o;return t.__generator(this,(function(a){switch(a.label){case 0:return[4,this._initJobHandler()];case 1:return a.sent(),this.multidimensionalDefinition&&(o=this._sliceId,n=t.__assign({multidimensionalDefinition:this.multidimensionalDefinition,sliceId:o},n)),[2,this.raster.fetchPixels(e,r,i,n)]}}))}))},r.prototype.identify=function(e,r){return void 0===r&&(r={}),this.raster.identify(e,r)},r.prototype.increaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount++},r.prototype.decreaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()},r.prototype.write=function(r,t){var i=this.raster;if(this.loaded?"RasterTileServer"===i.datasetFormat&&("Raster"===i.tileType||"Map"===i.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return e.prototype.write.call(this,r,t);if(t&&t.messages){var n=t.origin+"/"+(t.layerContainerType||"operational-layers");t.messages.push(new s("layer:unsupported","Layers ("+this.title+", "+this.id+") of type '"+this.declaredClass+"' are not supported in the context of '"+n+"'",{layer:this}))}return null},r.prototype._initJobHandler=function(){var e=this;if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;var r=new x;return this._rasterJobHandler.connectionPromise=r.initialize().then((function(){e._rasterJobHandler.instance=r,e.raster.rasterJobHandler=r,e.renderer&&e.updateRenderer()})).catch((function(){return null})),this._rasterJobHandler.connectionPromise},r.prototype._shutdownJobHandler=function(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null},r.prototype._openRaster=function(e){return t.__awaiter(this,void 0,void 0,(function(){var r,i,n,o,a,l,p,d,u,c,y;return t.__generator(this,(function(t){switch(t.label){case 0:return[4,T.open(this.raster||{url:this.url,sourceJSON:this.sourceJSON,signal:e})];case 1:if(r=t.sent(),this.url||(this.url=r.url),this.raster=r,!(i=r.rasterInfo))throw new s("tile-imagery-layer:load","cannot load resources on "+this.url);if(this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON&&(this._set("version",this.sourceJSON.currentVersion),this._set("copyright",this.sourceJSON.copyrightText)),"Map"===this.raster.tileType&&(this.popupEnabled=!1),n=i.spatialReference,o=i.pixelSize,a=i.storageInfo,!(l=a.tileInfo)){for(p=[],d=a.maximumPyramidLevel||0,u=Math.max(o.x,o.y),c=1/.0254*96*u,y=0;y<=d;y++)p.push({level:d-y,resolution:u,scale:c}),u*=2,c*=2;l=new P({origin:a.origin,size:[a.blockWidth,a.blockHeight],spatialReference:n,lods:p}),a.tileInfo=l}return null==this.title&&(this.title=this.raster.datasetName),i.multidimensionalInfo&&(this._configDefaultSlice(),this._sliceId=this.raster.getSliceIndex(this.multidimensionalDefinition)),this._configDefaultRenderer(),[2,r]}}))}))},r.prototype._configDefaultSlice=function(){var e=this.raster.rasterInfo.multidimensionalInfo.variables[0],r=[];e.dimensions.forEach((function(t){r.push(new R({variableName:e.name,dimensionName:t.name,values:t.values[0],isSlice:!0}))})),this.multidimensionalDefinition=r},r.prototype._configDefaultRenderer=function(){var e=this.raster.rasterInfo,r=e.pixelType;this.bandIds||(this.bandIds=J.getDefaultBandCombination(e)),this.renderer||(this.renderer=J.createDefaultRenderer(e,this.bandIds)),"u8"===r&&this.renderer&&"stretchType"in this.renderer&&"min-max"===this.renderer.stretchType&&this.renderer.dynamicRangeAdjustment&&(this.renderer.dynamicRangeAdjustment=!1,this.renderer.statistics=this.renderer.statistics||[[0,255],[0,255],[0,255]]),this.symbolizer?(this.symbolizer.renderer=this.renderer,this.symbolizer.rasterInfo=e):this.symbolizer=new w({renderer:this.renderer,rasterInfo:e}),this.symbolizer.bind()||L.warn("ImageryTileLayer","The given renderer is not supported by the layer.")},t.__decorate([y.property()],r.prototype,"_cachedRendererJson",void 0),t.__decorate([y.property()],r.prototype,"_sliceId",void 0),t.__decorate([y.property()],r.prototype,"_compatibleFullExtent",void 0),t.__decorate([y.property()],r.prototype,"_rasterJobHandler",void 0),t.__decorate([y.property({type:[h.Integer],json:{write:{overridePolicy:D}}})],r.prototype,"bandIds",void 0),t.__decorate([y.property()],r.prototype,"copyright",void 0),t.__decorate([y.property({type:i.Extent}),y.aliasOf("rasterInfo.extent")],r.prototype,"fullExtent",void 0),t.__decorate([y.property({type:String,json:{read:{reader:H.read},write:{writer:H.write,overridePolicy:D}}})],r.prototype,"interpolation",void 0),t.__decorate([y.property(I.legendEnabled)],r.prototype,"legendEnabled",void 0),t.__decorate([y.property({type:Boolean,json:{read:!1}})],r.prototype,"isReference",void 0),t.__decorate([y.property({type:["show","hide"]})],r.prototype,"listMode",void 0),t.__decorate([y.property({type:[R]})],r.prototype,"multidimensionalDefinition",null),t.__decorate([y.property()],r.prototype,"raster",void 0),t.__decorate([y.property({readOnly:!0}),y.aliasOf("raster.rasterInfo")],r.prototype,"rasterInfo",void 0),t.__decorate([y.property()],r.prototype,"sourceJSON",void 0),t.__decorate([y.property({type:i.SpatialReference}),y.aliasOf("rasterInfo.spatialReference")],r.prototype,"spatialReference",void 0),t.__decorate([y.property({type:P,dependsOn:["rasterInfo"]}),y.aliasOf("rasterInfo.storageInfo.tileInfo")],r.prototype,"tileInfo",void 0),t.__decorate([y.property({readOnly:!0})],r.prototype,"version",void 0),t.__decorate([y.property()],r.prototype,"title",void 0),t.__decorate([y.property({readOnly:!0,json:{read:!1}})],r.prototype,"type",void 0),t.__decorate([y.property(I.url)],r.prototype,"url",void 0),t.__decorate([y.property({type:["ArcGISTiledImageServiceLayer"]})],r.prototype,"operationalLayerType",void 0),t.__decorate([y.property({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:function(e,r){return!r.disablePopup}},write:{target:"disablePopup",overridePolicy:D,writer:function(e,r,t){r[t]=!e}}}})],r.prototype,"popupEnabled",void 0),t.__decorate([y.property({type:n,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:D}}})],r.prototype,"popupTemplate",void 0),t.__decorate([y.property({readOnly:!0,dependsOn:["title"]})],r.prototype,"defaultPopupTemplate",null),t.__decorate([y.property({readOnly:!0,type:[S],dependsOn:["rasterInfo"]})],r.prototype,"fields",null),t.__decorate([y.property({types:o.rasterRendererTypes,json:{read:{source:"layerDefinition.drawingInfo.renderer"},write:{target:"layerDefinition.drawingInfo.renderer",overridePolicy:D}}})],r.prototype,"renderer",null),t.__decorate([y.reader("renderer")],r.prototype,"readRenderer",null),t.__decorate([y.property()],r.prototype,"symbolizer",void 0),r=t.__decorate([y.subclass("esri.layers.ImageryTileLayer")],r)}(v.ScaleRangeLayer(g.RefreshableLayer(m.OperationalLayer(b.PortalLayer(u.MultiOriginJSONMixin(_))))))}));